# Generated by Django 5.2.5 on 2025-08-19 14:33

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Цвет')),
                ('hex_code', models.CharField(max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Укажите HEX в формате #RRGGBB', regex='^#([0-9A-Fa-f]{6})$')], verbose_name='HEX-код')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Fabric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название коллекции')),
                ('date_of_creation', models.DateField(verbose_name='Дата выпуска')),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекции',
                'ordering': ('-date_of_creation', 'name'),
                'indexes': [models.Index(fields=['date_of_creation'], name='products_co_date_of_878237_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('article', models.CharField(editable=False, max_length=5, unique=True, validators=[django.core.validators.RegexValidator(message='Артикул должен состоять ровно из 5 цифр', regex='^\\d{5}$')], verbose_name='Артикул')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.PositiveIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.collection', verbose_name='Коллекция')),
                ('colors', models.ManyToManyField(blank=True, related_name='products', to='products.color', verbose_name='Цвета')),
                ('sizes', models.ManyToManyField(blank=True, related_name='products', to='products.size', verbose_name='Размеры')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ('name', 'id'),
            },
        ),
        migrations.CreateModel(
            name='ProductFabric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Содержание, %')),
                ('fabric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.fabric', verbose_name='Материал')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fabrics', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Состав материала',
                'verbose_name_plural': 'Состав материала',
                'ordering': ('product', 'fabric'),
                'constraints': [models.UniqueConstraint(fields=('product', 'fabric'), name='uniq_fabric_per_product')],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Фото')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Главное фото')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Порядок')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Фото товара',
                'verbose_name_plural': 'Фотографии товара',
                'ordering': ('order', 'id'),
                'indexes': [models.Index(fields=['product', 'order'], name='products_pr_product_e55bb9_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_featured', True)), fields=('product',), name='uniq_featured_image_per_product')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['article'], name='products_pr_article_76912c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='products_pr_price_9b1a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_pr_name_9ff0a3_idx'),
        ),
    ]
